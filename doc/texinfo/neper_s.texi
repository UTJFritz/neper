@c This file is part of the Neper software package.
@c Copyright (C) 2003-2018 Romain Quey
@c See the COPYING file in the top-level directory.

@node Simulation Module (-S)
@chapter Simulation Module (-S)

@MS{} is the module for post-processing simulation results.  It can first be used to reformat an FEPX raw result directory into a human-friendly @dfn{simulation directory} (@pxref{Simulation Directory (@file{.sim})}), which is as simple as running @samp{neper -S @var{fepx_res_dir}}, where @samp{@var{fepx_res_dir}} is the FEPX raw result directory.  All FEPX raw results are reformatted by default, but a selection of results can also be specified.
@c
@MS{} also enables post-processing, through the computation of new results from mesh results or existing simulation results.  Results can be written for the nodes, elements and elsets.  Elset results are obtained from the element results, by averaging or other statistical treatments.  Results can also be imported from external files.  The results can be assigned names and defined from general expressions, such as in @samp{energy:0.1234*(crss-crss(step=0))^2}.
@c
It is also possible to merge simulation directories that represent successive parts of a simulation (e.g.@ resulting from FEPX restarts).
@c
The simulation directory can be loaded by @mV{} for result visualization.

@sp 1
Here is what a typical run of @mS{} looks like:

@sp 1
@example
$ neper -S fepx-simulation

========================    N   e   p   e   r    =======================
Info   : A software package for polycrystal generation and meshing.
Info   : Version 4.0.0
Info   : Built with: gsl|muparser|opengjk|openmp|nlopt|libscotch (full)
Info   : Running on 8 threads.
Info   : <https://neper.info>
Info   : Copyright (C) 2003-2021, and GNU GPL'd, by Romain Quey.
Info   : Loading initialization file `/home/rquey/.neperrc'...
Info   : ---------------------------------------------------------------
Info   : MODULE  -S loaded with arguments:
Info   : [ini file] (none)
Info   : [com line] fepx-simulation
Info   : ---------------------------------------------------------------
Info   : Reading input data...
Info   :   - Reading arguments...
Info   : Writing simulation directory from FEPX result directory...
Info   :     [o] Writing directory `fepx-simulation.sim'...
Info   :   - Parsing FEPX results...
Info   :     [i] Parsing file `fepx-simulation/post.report'...
Info   :     [i] Parsed file `fepx-simulation/post.report'.
Info   :     > Partition number: 8.
Info   :     > Step      number: 10.
Info   :     > Node      number: 2752.
Info   :     > Element   number: 1596.
Info   :   - Writing report file...
Info   :     [o] Writing file `fepx-simulation.sim/report'...
Info   :     [o] Wrote file `fepx-simulation.sim/report'.
Info   :   - Writing inputs...
Info   :     [o] Writing directory `fepx-simulation.sim/inputs'...
Info   :       . simulation.tess...
Info   :       . simulation.msh...
Info   :       . simulation.config...
Info   :     [o] Wrote directory `fepx-simulation.sim/inputs'.
Info   :   - Writing results...
Info   :     [o] Writing directory `fepx-simulation.sim/results'...
Info   :       . coo...       100%
Info   :       . ori...       100%
Info   :     [o] Wrote directory `fepx-simulation.sim/results'.
Info   :     [o] Wrote directory `fepx-simulation.sim'.
Info   : Elapsed time: 0.075 secs.
========================================================================

@end example

@section Arguments

@subsection Input Data

@inp{, directory_name,
Specify the name of the input directory.  It can be
@emph{(i)} an FEPX raw result directory@footnote{For a restarted FEPX simulation@comma{} append @samp{@SEPDEP@var{restart_number}} to the directory name to specify the restart number; otherwise, Neper attempts to find the simulation restart files with the highest index.} (to convert into a simulation directory)@comma{}
@emph{(ii)} a simulation directory or
@emph{(iii)} a series of simulation directories@comma{} combined with @samp{@SEPNODEP} (to merge).,
any, none}

@subsection Results Options

Below are options to define the results to write.  In the case where a
simulation directory is loaded as input, the specified results add to the
existing results.  The results can be any FEPX raw result (if an FEPX raw
result is provided as input), subresults (such as vector or tensor components),
or new results defined from mesh and simulation results.
It is also possible to import results for files.
Any result can also be assigned a @dfn{name} alongside its expression.
@footnote{Defining a name becomes mandatory for expressions containing divisions@comma{} as the @samp{/} character cannot be used in file names.}

@opt{-noderes, char_string,
Specify the nodal results to output. Provide
@samp{none} for none@comma{}
@samp{inputres} for all FEPX raw results@comma{}
@samp{@var{res}} for a specific FEPX raw result@comma{}
@samp{@var{resX}} or @samp{@var{resXY}} for a specific component of a result (vectorial or tensorial@comma{} respectively@comma{} 1-indexed)@footnote{The original result@comma{} @var{res}@comma{} must already be available in the simulation directory.}@comma{}
@samp{@var{res}:file(@var{basename})} for importing results from files of basename @file{@var{basename}} (the files of the different steps must be available as @file{@var{basename}.step*})@comma{}
or any expression based on the mesh or simulation results (the mesh result can be
any variables listed in @ref{Mesh Keys}).
@samp{disp} can be used to get the node displacements (from the node coordinates). To use a simulation result at a specific step@comma{} use @samp{@var{res}(step=@var{step})}@comma{} where @samp{@var{step}} is the step number.
To define a name corresponding to a result@comma{} use @samp{@var{name}:@var{expression}}@comma{} where @var{name} is the name and @var{expression} is its expression.
To remove a result@comma{} use @samp{!@var{res}}@comma{} where @samp{@var{res}} is the result.@footnote{The expression must be enclosed in single quotes.}
To provide several values@comma{} combine them @w{with @samp{@SEPNODEP{}}}.,
any, inputres}

@opt{-eltres, char_string,
Specify the elemental results to output. Provide
@samp{none} for none@comma{}
@samp{inputres} for all FEPX raw results@comma{}
@samp{@var{res}} for a specific FEPX raw results@comma{}
@samp{@var{resX}} or @samp{@var{resXY}} for a specific component of a result (vectorial or tensorial@comma{} respectively@comma{} 1-indexed)@footnote{The original result@comma{} @var{res}@comma{} must already be available in the simulation directory.}@comma{}
@samp{@var{res}:file(@var{basename})} for importing results from files of basename @file{@var{basename}} (the files of the different steps must be available as @file{@var{basename}.step*})@comma{}
or any expression based on the mesh or simulation results (the mesh result can be
any variables listed in @ref{Mesh Keys}).
To use the simulation result corresponding to a specific step@comma{} use @samp{@var{res}(step=@var{step})}@comma{} where @samp{@var{step}} is the step number.
To define a name corresponding to a result@comma{} use @samp{@var{name}:@var{expression}}@comma{} where @var{name} is the name and @var{expression} is its expression.
To remove a result@comma{} use @samp{!@var{res}}@comma{} where @samp{@var{res}} is the result.@footnote{The expression must be enclosed in single quotes.}
To provide several values@comma{} combine them @w{with @samp{@SEPNODEP{}}}.,
any, inputres}

@opt{-elsetres, char_string,
Specify the element set results to output. Provide
@samp{none} for none@comma{}
@samp{@var{res}} for a specific results that can be computed@comma{}
by volume-weighted averaging@footnote{Orientations (@code{ori}) are properly averaged using quaternions@comma{} taking the crystal symmetry into account@comma{} as decribed in Orilib's documentation.}@comma{} from the elemental results@comma{}
@samp{@var{res}:file(@var{basename})} for importing results from files of basename @file{@var{basename}} (the files of the different steps must be available as @file{@var{basename}.step*})@comma{}
or any expression based on the mesh or simulation results (the mesh result can be
any variables listed in @ref{Mesh Keys}).
Orientation distribution results can be obtained (@pxref{Simulation Results}).
To use the simulation result corresponding to a specific step@comma{} use @samp{@var{res}(step=@var{step})}@comma{} where @samp{@var{step}} is the step number.
To define a name corresponding to a result@comma{} use @samp{@var{name}:@var{expression}}@comma{} where @var{name} is the name and @var{expression} is its expression.
To remove a result@comma{} use @samp{!@var{res}}@comma{} where @samp{@var{res}} is the result.@footnote{The expression must be enclosed in single quotes.}.
To provide several values@comma{} combine them @w{with @samp{@SEPNODEP{}}}.,
any, none}

@subsection Output Options

@kindex -o
@opt{-o, directory_name,
Specify the name of the output simulation directory (the default @file{.sim} extension
is not added to the argument).,
any, @var{fepx_result_directory}.sim}

@c @subsection Post-Processing Options
@c
@c @kindex -outdata
@c @opt{-outdata, char_string,
@c Specify the output data (variables)@comma{}
@c which can be the following:@*
@c @bullet{} @samp{@var{sig}} for the stress;@*
@c @bullet{} @samp{@var{eel}} for the elastic strain;@*
@c @bullet{} @samp{@var{ori}} for the crystal orientation;@*
@c @bullet{} @samp{@var{gdt}} for the slip rates;@*
@c @bullet{} @samp{@var{tau}} for the slip strengths;@*
@c @bullet{} @samp{@var{gam}} for the slip amplitudes;@*
@c @bullet{} @samp{@var{gsm}} for the sum of the slip amplitudes;@*
@c @bullet{} @samp{@var{wpl}} for the plastic work;@*
@c @bullet{} @samp{@var{all}} for all.
@c ,
@c see above list, none}
@c
@c @kindex -grainextract
@c @opt{-grainextract, char_string,
@c Specify the grains to extract.  Provide a list of numbers or @samp{all} for all.,
@c see above list, none}
@c
@c @kindex -grainoutdata
@c @opt{-grainoutdata, char_string,
@c Specify the grain output data (variables).,
@c any, none}

@section Output Directory

The output directory is

@itemize

@item Simulation directory @code{.sim}

It contains the input files and the results of the simulation.  @xref{Simulation Directory (@file{.sim})} for details on its content.

@end itemize

@section Examples

Below are some examples of use of neper -S.

@enumerate
@item    Transform an FEPX raw result directory into a simulation directory (all results).
@com{neper -S fepx-simulation}

@item    Transform an FEPX raw result directory into a simulation directory of specified name (all results).
@com{neper -S fepx-simulation -o @var{foo}}

@item    Transform an FEPX raw result directory into a simulation directory of specified results: the nodal @samp{coo} and the elemental @samp{ori}.
@com{neper -S fepx-simulation -noderes coo -eltres ori}

@item    Transform an FEPX raw result directory into a simulation directory; get all results and the element volumes.
@com{neper -S fepx-simulation -eltres inputres,vol}

@item    Add the nodal @code{@var{x}} and the elemental @code{@var{vol}} and @code{@var{stress33}} results to a simulation directory.
@com{neper -S simulation -noderes x -eltres vol,rr}

@item    Add the elemental @code{@var{energy}} result, defined as @code{0.1234*(@var{crss}-@var{crss}(step=0))^2}, to a simulation directory.
@com{neper -S -eltres "energy:0.1234*(crss-crss(step=0))^2"}

@item    Override the elemental @code{@var{energy}} result, newly defined as @code{0.5678*(@var{crss}-@var{crss}(step=0))^2}, to a simulation directory.
@com{neper -S -eltres '!energy,energy:0.5678*(crss-crss(step=0))^2'}

@item    Add the elset @code{@var{stress}} result to a simulation directory (the @code{@var{stress}} result must exist for elements).
@com{neper -S simulation -eltres stress}

@item    Merge two simulation directories into a single simulation directory.
@com{neper -S cycle1.sim,cycle2.sim -o cycle1-2}

@end enumerate
